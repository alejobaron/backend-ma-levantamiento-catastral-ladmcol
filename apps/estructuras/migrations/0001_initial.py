# Generated by Django 5.1.1 on 2025-01-26 11:42

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dominios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtArchivo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('fecha_aceptacion', models.DateField(auto_now=True, help_text='Fecha en la que ha sido aceptado el documento.', null=True, verbose_name='Fecha de aceptación')),
                ('datos', models.CharField(blank=True, help_text='Datos que contiene el documento.', max_length=250, null=True, verbose_name='Datos')),
                ('extraccion', models.DateField(blank=True, help_text='Última fecha de extracción del documento.', null=True, verbose_name='Extracción')),
                ('fecha_grabacion', models.DateField(blank=True, help_text='Fecha en la que el documento es aceptado en el sistema.', null=True, verbose_name='Fecha de grabación')),
                ('fecha_entrega', models.DateField(blank=True, help_text='Fecha en la que fue entregado el documento.', null=True, verbose_name='Fecha de entrega')),
                ('espacio_de_nombres', models.CharField(help_text='Identificador único global. Corresponde al atributo de la clase en LADM.', max_length=50, unique=True, verbose_name='Espacio de nombres')),
                ('local_id', models.CharField(help_text='Identificador único local.', max_length=50, unique=True, verbose_name='Local ID')),
            ],
            options={
                'verbose_name': 'Repositorio de archivo',
                'verbose_name_plural': 'Repositorios de archivos',
            },
        ),
        migrations.CreateModel(
            name='ExtInteresado',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_interesado', models.CharField(help_text='Identificador único del interesado.', max_length=50, unique=True, verbose_name='ID de Interesado')),
                ('huella_dactilar', models.ImageField(blank=True, help_text='Imagen de la huella dactilar del interesado.', max_length=200, null=True, upload_to=None, verbose_name='Huella Dactilar')),
                ('nombre', models.CharField(blank=True, help_text='Campo de nombre del interesado.', max_length=200, null=True, verbose_name='Nombre')),
                ('fotografia', models.ImageField(blank=True, help_text='Fotografía del interesado.', max_length=200, null=True, upload_to=None, verbose_name='Fotografía')),
                ('firma', models.ImageField(blank=True, help_text='Firma del interesado.', max_length=200, null=True, upload_to=None, verbose_name='Firma')),
                ('documento_escaneado', models.CharField(blank=True, help_text='Ruta de almacenamiento del documento escaneado del interesado.', max_length=200, null=True, verbose_name='Documento escaneado')),
            ],
            options={
                'verbose_name': 'Información de interesado',
                'verbose_name_plural': 'Información de interesados',
            },
        ),
        migrations.CreateModel(
            name='GM_MultiSurface3D',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_geometria', models.CharField(help_text='Identificador único de la geometría. Terreno (T), Construcción (C), Únidad de Construcción (UC)', max_length=50, unique=True, verbose_name='ID Geometría')),
                ('geometria', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='Corresponde a la figura geométrica vectorial poligonal, generada a partir de los linderos del predio, linderos de la construcción o de la únidad de construcción.', srid=4326, verbose_name='Geometría')),
            ],
            options={
                'verbose_name': 'Geometría',
                'verbose_name_plural': 'Geometrias',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCOL_AreaValor',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('id_area_valor', models.CharField(db_index=True, help_text='Indentificador único del valor de área.', max_length=50, verbose_name='ID de Valor de área')),
                ('area', models.DecimalField(decimal_places=2, help_text='Corresponde al valor del área registral en la base de datos catastral.', max_digits=15, verbose_name='Àrea')),
                ('datos_proyeccion', models.CharField(blank=True, help_text='Parametros de la proyección utilizada para el cálculo del área.', max_length=250, null=True, verbose_name='Datos de la proyecciòn')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Valor de àrea',
                'verbose_name_plural': 'historical Valores de área',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_VolumenValor',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('id_volumen_valor', models.CharField(db_index=True, help_text='Identificador único del valor de volumen.', max_length=50, verbose_name='ID de Valor de volumen')),
                ('volumen_medicion', models.DecimalField(decimal_places=2, help_text='Medición del volumen en m3.', max_digits=15, verbose_name='Volumen medición')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Valor de volumen',
                'verbose_name_plural': 'historical Valores de volumen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExtArchivo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('fecha_aceptacion', models.DateField(blank=True, editable=False, help_text='Fecha en la que ha sido aceptado el documento.', null=True, verbose_name='Fecha de aceptación')),
                ('datos', models.CharField(blank=True, help_text='Datos que contiene el documento.', max_length=250, null=True, verbose_name='Datos')),
                ('extraccion', models.DateField(blank=True, help_text='Última fecha de extracción del documento.', null=True, verbose_name='Extracción')),
                ('fecha_grabacion', models.DateField(blank=True, help_text='Fecha en la que el documento es aceptado en el sistema.', null=True, verbose_name='Fecha de grabación')),
                ('fecha_entrega', models.DateField(blank=True, help_text='Fecha en la que fue entregado el documento.', null=True, verbose_name='Fecha de entrega')),
                ('espacio_de_nombres', models.CharField(db_index=True, help_text='Identificador único global. Corresponde al atributo de la clase en LADM.', max_length=50, verbose_name='Espacio de nombres')),
                ('local_id', models.CharField(db_index=True, help_text='Identificador único local.', max_length=50, verbose_name='Local ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Repositorio de archivo',
                'verbose_name_plural': 'historical Repositorios de archivos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGM_MultiSurface3D',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('id_geometria', models.CharField(db_index=True, help_text='Identificador único de la geometría. Terreno (T), Construcción (C), Únidad de Construcción (UC)', max_length=50, verbose_name='ID Geometría')),
                ('geometria', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='Corresponde a la figura geométrica vectorial poligonal, generada a partir de los linderos del predio, linderos de la construcción o de la únidad de construcción.', srid=4326, verbose_name='Geometría')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Geometría',
                'verbose_name_plural': 'historical Geometrias',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LC_EstructuraNovedadNumeroPredial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_novedad_numero_predial', models.CharField(help_text='Identificador único de la novedad de número predial.', max_length=50, unique=True, verbose_name='ID Novedad Número Predial')),
                ('numero_predial', models.CharField(help_text='El predio no sufre modificación del código predial nacional de 30 dígitos de acuerdo con la estructura', max_length=30, verbose_name='Número predial')),
            ],
            options={
                'verbose_name': 'Novedad número predial',
                'verbose_name_plural': 'Novedades número predial',
            },
        ),
        migrations.CreateModel(
            name='LC_NovedadFMI',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_novedad_FMI', models.CharField(help_text='Identificador único de la novedad de FMI.', max_length=50, unique=True, verbose_name='ID de Novedad FMI')),
                ('codigo_ORIP', models.CharField(help_text='ES el consecutivo que se asigna a cada oficina de registro de instrumentos públicos', max_length=50, verbose_name='Código ORIP')),
                ('numero_FMI', models.CharField(help_text='Es el consecutivo que se asigna a cada predio juridico abierto en la ORIP', max_length=50, verbose_name='Número FMI')),
            ],
            options={
                'verbose_name': 'Novedad FMI',
                'verbose_name_plural': 'Novedades FMI',
            },
        ),
        migrations.CreateModel(
            name='COL_AreaValor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_area_valor', models.CharField(help_text='Indentificador único del valor de área.', max_length=50, unique=True, verbose_name='ID de Valor de área')),
                ('area', models.DecimalField(decimal_places=2, help_text='Corresponde al valor del área registral en la base de datos catastral.', max_digits=15, verbose_name='Àrea')),
                ('datos_proyeccion', models.CharField(blank=True, help_text='Parametros de la proyección utilizada para el cálculo del área.', max_length=250, null=True, verbose_name='Datos de la proyecciòn')),
                ('tipo', models.ForeignKey(help_text='Indica si el valor a registra corresonde al área geográfica o alfanumérica de la base de datos catastral.', on_delete=django.db.models.deletion.PROTECT, related_name='tipo_area', to='dominios.col_areatipo', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Valor de àrea',
                'verbose_name_plural': 'Valores de área',
            },
        ),
        migrations.CreateModel(
            name='COL_VolumenValor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_volumen_valor', models.CharField(help_text='Identificador único del valor de volumen.', max_length=50, unique=True, verbose_name='ID de Valor de volumen')),
                ('volumen_medicion', models.DecimalField(decimal_places=2, help_text='Medición del volumen en m3.', max_digits=15, verbose_name='Volumen medición')),
                ('tipo', models.ForeignKey(help_text='Indicación de si el volumen es calculado, si figura como oficial o si se da otra circunstancia.', on_delete=django.db.models.deletion.PROTECT, related_name='tipo_volumen', to='dominios.col_volumentipo', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Valor de volumen',
                'verbose_name_plural': 'Valores de volumen',
            },
        ),
        migrations.CreateModel(
            name='ExtDireccion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('id_direccion', models.CharField(help_text='Identificador único de la dirección.', max_length=50, unique=True, verbose_name='ID de Dirección')),
                ('es_direccion_principal', models.BooleanField(blank=True, help_text='Indica si esta es la dirección principal del predio', null=True, verbose_name='¿Es dirección principal?')),
                ('codigo_postal', models.CharField(blank=True, help_text='Código postal asociado a la dirección', max_length=50, null=True, verbose_name='Código postal')),
                ('valor_via_principal', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valor vía principal')),
                ('letra_via_principal', models.CharField(blank=True, max_length=50, null=True, verbose_name='Letra vía principal')),
                ('letra_via_generadora', models.CharField(blank=True, max_length=50, null=True, verbose_name='Letra de vía generadora')),
                ('valor_via_generadora', models.CharField(blank=True, max_length=50, null=True, verbose_name='Valor de vía generadora')),
                ('numero_predio', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número del predio')),
                ('complemento', models.CharField(blank=True, help_text='Información adicional sobre la dirección', max_length=200, null=True, verbose_name='Complemento')),
                ('nombre_predio', models.CharField(blank=True, help_text='Nombre de los predios en el sector rual. ESte valor se diligencia cuando el tipo de direccion es No Estructurada', max_length=200, null=True, verbose_name='Nombre del predio')),
                ('localizacion', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Par de valores georreferenciados (x,y) en los que se encuentra la dirección', null=True, srid=4326, verbose_name='Localización')),
                ('clase_via_principal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='direcciones', to='dominios.claseviaprincipalclase')),
            ],
            options={
                'verbose_name': 'Dirección',
                'verbose_name_plural': 'Direcciones',
            },
        ),
    ]
