# Generated by Django 5.1.1 on 2025-01-26 11:42

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CI_Forma_Presentacion_Codigo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('codigo', models.CharField(choices=[('Imagen', 'Imagen'), ('Documento', 'Docuemento'), ('Mapa', 'Mapa'), ('Video', 'Video')], max_length=50, verbose_name='Tipos de formatos de presentación de la fuente')),
            ],
            options={
                'verbose_name': 'Tipo de formato',
                'verbose_name_plural': 'Tipos de formatos',
            },
        ),
        migrations.CreateModel(
            name='ClaseViaPrincipalClase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('clase', models.CharField(choices=[('Avenida_Calle', 'Avenida Calle'), ('Avenida_Carrera', 'Avenida Carrera'), ('Avenida', 'Avenida'), ('Autopista', 'Autopista'), ('Circunvalar', 'Circunvalar'), ('Calle', 'Calle'), ('Carrera', 'Carrera'), ('Diagonal', 'Diagonal'), ('Transversal', 'Transversal'), ('Circular', 'Circular')], help_text='Clase de vía principal', max_length=50, verbose_name='Clase de Vía Principal')),
            ],
            options={
                'verbose_name': 'Clase de Vía Principal',
                'verbose_name_plural': 'Clases de Vías Principales',
            },
        ),
        migrations.CreateModel(
            name='COL_AreaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Area_catastral_grafica', 'Àrea catastral gráfica del predio'), ('Area_catastral_alfanumerica', 'Área catastral alfanumérica')], max_length=50, verbose_name='Tipos de área catastral')),
            ],
            options={
                'verbose_name': 'Tipo de área',
                'verbose_name_plural': 'Tipos de área',
            },
        ),
        migrations.CreateModel(
            name='COL_DimensionTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Dim2D', 'Dimensión 2D'), ('Dim3D', 'Dimensión 3D'), ('Otro', 'Otra dimensiòn')], max_length=50, verbose_name='Tipos de dimensiones')),
            ],
            options={
                'verbose_name': 'Tipo de dimensión',
                'verbose_name_plural': 'Tipos de dimensiones',
            },
        ),
        migrations.CreateModel(
            name='COL_EstadoDisponibilidadTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Convertido', 'Convertido'), ('Desconocido', 'Desconocido'), ('Disponible', 'Disponible')], max_length=50, verbose_name='Tipos de estado de disponibilidad')),
            ],
            options={
                'verbose_name': 'Tipo de estado de disponibilidad',
                'verbose_name_plural': 'Tipos de estados de disponibiidad',
            },
        ),
        migrations.CreateModel(
            name='COL_FuenteAdministrativaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Documento_publico', 'Documento Público'), ('Documento_privado', 'Documento Privado')], max_length=50, verbose_name='Tipo de documento.')),
            ],
            options={
                'verbose_name': 'Tipo de fuente administrativa (COL)',
                'verbose_name_plural': 'Tipos de fuentes administrativas (COL)',
            },
        ),
        migrations.CreateModel(
            name='COL_FuenteEspacialTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Croquis_Campo', 'Croquis de campo'), ('Datos_Crudos', 'Datos crudos(GPS, Estación total, LIDAR)'), ('Ortofoto', 'Ortofoto'), ('Informe_Tecnico', 'Informe técnico'), ('Registro_Fotografico', 'Registro fotográfico')], max_length=100, verbose_name='Tipos de fuente espacial')),
            ],
            options={
                'verbose_name': 'Tipo de fuente espacial',
                'verbose_name_plural': 'Tipos de fuentes espaciales',
            },
        ),
        migrations.CreateModel(
            name='COL_GrupoInteresadoTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Grupo civil', 'Grupo Civil'), ('Grupo empresarial', 'Grupo Empresarial'), ('Grupo étnico', 'Grupo Etnico'), ('Grupo mixto', 'Grupo Mixto')], max_length=50, verbose_name='Tipo de grupo de interesados')),
            ],
            options={
                'verbose_name': 'Tipo de grupo de interesado',
                'verbose_name_plural': 'Tipos de grupo de interesados',
            },
        ),
        migrations.CreateModel(
            name='COL_RelacionSuperficieTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('En_Rasante', 'En rasante'), ('En_Vuelo', 'En vuelo'), ('En_subsuelo', 'En subsuelo'), ('Otro', 'Otro')], max_length=50, verbose_name='Tipos de superficie')),
            ],
            options={
                'verbose_name': 'Tipo de relación de superficie',
                'verbose_name_plural': 'Tipos de relación de superficie',
            },
        ),
        migrations.CreateModel(
            name='COL_UnidadAdministrativaBasicaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Predio', 'Predio'), ('Ordenamiento_Territorial', 'Ordenamiento Territorial'), ('Servicios_Publicos', 'Servicios Públicos'), ('Reservas_Naturales', 'Reservas Naturales'), ('Parques_Naturales', 'Parques Naturales'), ('Amenazas_Riesgos', 'Amenazas y Riesgos'), ('Servidumbre', 'Servidumbre'), ('Superficies_Agua', 'Superficies de Agua'), ('Transporte', 'Transporte')], help_text='Tipo de unidad administrativa básica', max_length=50, verbose_name='Tipo de Unidad Administrativa Básica')),
            ],
            options={
                'verbose_name': 'Tipo de Unidad Administrativa Básica',
                'verbose_name_plural': 'Tipos de Unidad Administrativa Básica',
            },
        ),
        migrations.CreateModel(
            name='COL_VolumenTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Oficial', 'Oficial'), ('Calculado', 'Calculado'), ('Otro', 'Otro')], max_length=50, verbose_name='Tipos de volumen')),
            ],
            options={
                'verbose_name': 'Tipo de volumen',
                'verbose_name_plural': 'Tipos de volumen',
            },
        ),
        migrations.CreateModel(
            name='CR_ConstruccionPlantaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Piso', 'Piso'), ('Mezanine', 'Mezanine'), ('Sotano', 'Sótano'), ('Semisotano', 'Semisótano'), ('Subterraneo', 'Subterraneo')], max_length=50, verbose_name='Tipos de plantas.')),
            ],
            options={
                'verbose_name': 'Tipo de planta de construcción',
                'verbose_name_plural': 'Tipos de plantas de construcción',
            },
        ),
        migrations.CreateModel(
            name='CR_DocumentoTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Cedula_Ciudadania', 'Cédula Ciudadanía'), ('Cedula_Extranjeria', 'Cédula EXtranjería'), ('NIT', 'NIT'), ('Tarjeta_Identidad', 'Tarjeta de Identidad'), ('Registro_Civil', 'Registro Civil'), ('Secuencial', 'Secuencial'), ('Pasaporte', 'Pasaporte')], help_text='Tipo de documento de identificación de la persona', max_length=50, verbose_name='Tipo de Documento')),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documentos',
            },
        ),
        migrations.CreateModel(
            name='CR_GrupoEtnicoTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Indígena', 'Indigena'), ('Rrom', 'Rrom'), ('Raizal', 'Raizal'), ('Palenquero', 'Palenquero'), ('Negro o afrocolombiano', 'Negro Afrocolombiano'), ('Ninguno', 'Ninguno')], help_text='Grupo de persona a la cual pertenece el interesado, quienes comparten una misma ideología cultural.', max_length=50, verbose_name='Tipo de grupo étnico')),
            ],
            options={
                'verbose_name': 'Tipo de grupo étnico',
                'verbose_name_plural': 'Tipos de grupos étnicos',
            },
        ),
        migrations.CreateModel(
            name='CR_InteresadoTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Persona natural', 'Persona Natural'), ('Persona juridica', 'Persona Juridica')], help_text='Persona natural que actúa a nombre propio y persona jurica que actúa como institución', max_length=50, verbose_name='Tipo de interesado')),
            ],
            options={
                'verbose_name': 'Tipo de interesado',
                'verbose_name_plural': 'Tipos de interesados',
            },
        ),
        migrations.CreateModel(
            name='CR_SexoTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('Sin determinar', 'Sin Determinar')], help_text='Corresponde a "Masculino" y "Femenino" según como aparezca en el tipo de documento de identidad', max_length=50, verbose_name='Tipo de sexo')),
            ],
            options={
                'verbose_name': 'Tipo de sexo',
                'verbose_name_plural': 'Tipos de sexo',
            },
        ),
        migrations.CreateModel(
            name='CR_UnidadConstruccionTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Residencial', 'Residencial'), ('Comercial', 'Comercial'), ('Industrial', 'Industrial'), ('Institucional', 'Institucional'), ('Anexo', 'Anexo')], max_length=50, verbose_name='Tipos de unidad de construcción')),
            ],
            options={
                'verbose_name': 'Tipo de unidad de construcción',
                'verbose_name_plural': 'Tipos de unidad de construcción',
            },
        ),
        migrations.CreateModel(
            name='CR_UsoUConsTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Apartamentos_4_y_mas_pisos_en_PH', 'Apartamentos más de 4 pisos en PH (Residencial)'), ('Apartamentos_4_y_mas_pisos', 'Apartamentos de 4 y más pisos (Residencial)'), ('Barracas', 'Barracas (Residencial)'), ('Casa_Elbas', 'Casa Elbas (Residencial)'), ('Depositos_Lockers', 'Depósitos o lockers (Residencial)'), ('Garajes_Cubiertos', 'Garajes cubiertos (Residencial)'), ('Garajes_En_PH', 'Garajes en PH (Residencial)'), ('Salon_Comunal', 'Salón comunal (Residencial)'), ('Secadero_Ropa', 'Secadero de ropa (Residencial)'), ('Vivienda_Colonial', 'Vivienda colonial (Residencial)'), ('Vivienda_Colonial_en_PH', 'Vivienda colonial en PH (Residencial)'), ('Vivienda_Hasta_3_Pisos', 'Vivienda hasta 3 pisos (Residencial)'), ('Vivienda_Hasta_3_Pisos_En_PH', 'Vivienda hasta 3 pisos en PH (Residencial)'), ('Vivienda_Recreacional', 'Vivienda recreacional (Residencial)'), ('Vivienda_Recreacional_En_PH', 'Vivienda recreacional en PH (Residencial)'), ('Bodegas_Comerciales_Grandes_Almacenes', 'Bodegas comerciales - Grandes almacenes (Comercial)'), ('Bodegas_Comerciales_en_PH', 'Bodegas Comerciales en PH (Comercial)'), ('Centros_Comerciales', 'Centros comerciales (Comercial)'), ('Centros_Comerciales_en_PH', 'Centros comerciales en PH (Comercial)'), ('Clubes_Casinos', 'Clubes - Casinos (Comercial)'), ('Comercio', 'Comercio (Comercial)'), ('Comercio_Colonial', 'Comercio colonial (Comercial)'), ('Comercio_en_PH', 'Comercio en PH (Comercial)'), ('Hotel_Colonial', 'Hotel colonial (Comercial)'), ('Hoteles', 'Hoteles (Comercial)'), ('Hoteles_en_PH', 'Hoteles en PH (Comercial)'), ('Oficinas_Consultorios', 'Oficinas - Consultorios (Comercial)'), ('Oficinas_Consultorios_Coloniales', 'Oficinas - Consultorios coloniales (Comercial)'), ('Oficinas_Consultorios_en_PH', 'Oficinas Consultorios en PH (Comercial)'), ('Parque_Diversiones', 'Parque de diversiones (Comercial)'), ('Parqueaderos', 'Parqueaderos (Comercial)'), ('Parqueaderos_en_PH', 'Parqueaderos en PH (Comercial)'), ('Pensiones_y_Residencias', 'Pensiones y residencias (Comercial)'), ('Plaza_Mercado', 'Plaza de mercado (Comercial)'), ('Restaurante_Colonial', 'Restaurante colonial (Comercial)'), ('Restaurantes', 'Restaurantes (Comercial)'), ('Restaurantes_en_PH', 'Restaurantes en PH (Comercial)'), ('Teatro_Cinemas', 'Teatro - Cinemas (Comercial)'), ('Teatro_Cinemas_en_PH', 'Teatro - Cinemas en PH (Comercial)'), ('Bodega_Casa_Bomba', 'Bodega casa bomba (Industrial)'), ('Bodegas_Casa_Bomba_en_PH', 'Bodegas casa bomba en PH (Industrial)'), ('Industrias', 'Industrias (Industrial)'), ('Industrias_en_PH', 'Industrias en PH (Industrial)'), ('Talleres', 'Talleres (Industrial)'), ('Aulas_de_Clases', 'Aulas de clases (Institucional)'), ('Biblioteca', 'Biblioteca (Institucional)'), ('Carceles', 'Cárceles (Institucional)'), ('Casas_de_Culto', 'Casas de culto (Institucional)'), ('Clinicas_Hospitales_Centros_Medicos', 'Clínicas, hospitales, centros medicos (Institucional)'), ('Colegio_y_Universidades', 'Colegio y universidades (Institucional)'), ('Coliseos', 'Coliseos (Institucional)'), ('Entidad_Educativa_Colonial_Colegio_Colonial', 'Entidad educativa colonial colegio colonial (Institucional)'), ('Estadios', 'Estadios (Institucional)'), ('Fuertes_y_Castillos', 'Fuertes y Castillos (Institucional)'), ('Iglesia', 'Iglesia (Institucional)'), ('Iglesia_en_PH', 'Iglesia en PH (Institucional)'), ('Instalaciones_Militares', 'Instalaciones militares (Institucional)'), ('Jardin_Infantil_en_Casa', 'Jardín infantil en casa (Institucional)'), ('Parque_Cementerio', 'Parque Cementerio (Institucional)'), ('Planetario', 'Planetario (Institucional)'), ('Plaza_de_Toros', 'Plaza de toros (Institucional)'), ('Puestos_de_Salud', 'Puestos de salud (Institucional)'), ('Museos', 'Museos (Institucional)'), ('Seminarios_Conventos', 'Seminarios, conventos (Institucional)'), ('Teatro', 'Teatro (Institucional)'), ('Unidad_Deportiva', 'Unidad deportiva (Institucional)'), ('Velodromo_Patinodromo', 'Velódromo, patinódromo (Institucional)'), ('Albercas_Banaderas', 'Albercas - Banaderas (Anexo)'), ('Beneficiaderos', 'Beneficiaderos (Anexo)'), ('Camaroneras', 'Camaroneras (Anexo)'), ('Canchas', 'Canchas (Anexo)'), ('Canchas_de_Tenis', 'Canchas de tenis (Anexo)'), ('Carretera', 'Carretera (Anexo)'), ('Cerramiento', 'Cerramiento (Anexo)'), ('Cimientos_Estructura_Muros_y_Placa_Base', 'Cimientos, estructura, muros y placa base (Anexo)'), ('Cocheras_Marraneras_Porquerizas', 'Cocheras - Marraneras - Porquerizas (Anexo)'), ('Construccion_en_Membrana_Arquitectonica', 'Construcción en membrana arquitectónica (Anexo)'), ('Contenedor', 'Contenedor (Anexo)'), ('Corrales', 'Corrales (Anexo)'), ('Establos_Pesebreras_Caballerizas', 'Establos - Pesebreras - Caballerizas (Anexo)'), ('Estacion_Bombeo', 'Estacion de bombeo (Anexo)'), ('Estacion_Sistema_Transporte', 'Estacion de sistema de transporte (Anexo)'), ('Galpones_Gallineros', 'Galpones - Gallineros (Anexo)'), ('Glamping', 'Glamping (Anexo)'), ('Hangar', 'Hangar (Anexo)'), ('Kioscos', 'Kioscos (Anexo)'), ('Lagunas_de_Oxidacion', 'Lagunas de oxidacion (Anexo)'), ('Marquesinas_Patios_Cubiertos', 'Marquesinas - Patios cubiertos (Anexo)'), ('Muelles', 'Muelles (Anexo)'), ('Murallas', 'Murallas (Anexo)'), ('Pergolas', 'Pérgolas (Anexo)'), ('Piscinas', 'Piscinas (Anexo)'), ('Pista_Aeropuerto', 'Pista aeropuerto (Anexo)'), ('Pozos', 'Pozos (Anexo)'), ('Ramadas_Cobertizos_Caneyes', 'Ramadas - Cobertizos - Caneyes (Anexo)'), ('Secaderos', 'Secaderos (Anexo)'), ('Silos', 'Silos (Anexo)'), ('Tanques', 'Tanques (Anexo)'), ('Toboganes', 'Toboganes (Anexo)'), ('Torre_de_Control', 'Torre de control (Anexo)'), ('Torres_de_Enfriamiento', 'Torres de enfriamiento (Anexo)'), ('Via_Ferrea', 'Vía Férrea (Anexo)')], max_length=50, verbose_name='Tipos de uso de unidad de constrocción')),
            ],
            options={
                'verbose_name': 'Tipo de uso de unidad de construcción',
                'verbose_name_plural': 'Tipos de usos de unidades de construcción',
            },
        ),
        migrations.CreateModel(
            name='GeometriaClase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('clase', models.CharField(choices=[('Terreno', 'Terreno'), ('Construccion', 'Construcción'), ('Unidad_Construcción', 'Unidad de construcción')], max_length=50, verbose_name='Clases a la que pertenece la geometría.')),
            ],
            options={
                'verbose_name': 'Clase de geometría',
                'verbose_name_plural': 'Clases de geometrias',
            },
        ),
        migrations.CreateModel(
            name='LC_CondicionPredioTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('NPH', 'NPH'), ('PH_Matriz', 'Matriz (PH)'), ('PH_Unidad_Predial', 'Unidad Predial (PH)'), ('Condominio_Matriz', 'Matriz (Condominio)'), ('Condominio_Unidad_Predial', 'Unidad Predial (Condominio)'), ('Parque_Cementerio_  Matriz', 'Matriz (Parque Cementerio)'), ('Parque_Cementerio_Unidad_Predial', 'Unidad Predial (Parque Cementerio)'), ('Via', 'Vía'), ('Informal', 'Informal'), ('Bien_Uso_Publico', 'Bien de Uso Público')], help_text='Tipo de condición de predio, con varias subcategorias', max_length=50, verbose_name='Tipo de Condición de Predio')),
            ],
            options={
                'verbose_name': 'Condición de Predio',
                'verbose_name_plural': 'Condiciones de Predios',
            },
        ),
        migrations.CreateModel(
            name='LC_DerechoTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Dominio', 'Dominio'), ('Ocupación', 'Ocupacion'), ('Posesión', 'Posesion')], help_text='Tipo de derecho relacionado con la tenencia del predio', max_length=50, verbose_name='Tipo de Derecho')),
            ],
            options={
                'verbose_name': 'Tipo de Derecho',
                'verbose_name_plural': 'Tipos de Derechos',
            },
        ),
        migrations.CreateModel(
            name='LC_DestinacionEconomicaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Acuicola', 'Acuícola'), ('Agricola', 'Agrícola'), ('Agroindustrial', 'Agroindustrial'), ('Agropecuario', 'Agropecuario'), ('Agroforestal', 'Agroforestal'), ('Comercial', 'Comercial'), ('Cultural', 'Cultural'), ('Educativo', 'Educativo'), ('Forestal', 'Forestal'), ('Habitacional', 'Habitacional'), ('Industrial', 'Industrial'), ('Infraestructura_Asociada_Produccion_Agropecuaria', 'Infraestructura Asociada a Producción Agropecuaria'), ('Infraestructura_Hidraulica', 'Infraestructura Hidráulica'), ('Infraestructura_Saneamiento_Basico', 'Infraestructura de Saneamiento Básico'), ('Infraestructura_Seguridad', 'Infraestructura de Seguridad'), ('Infraestructura_Transporte', 'Infraestructura de Transporte'), ('Institucional', 'Institucional'), ('Mineria_Hidrocarburos', 'Minería e Hidrocarburos'), ('Lote_Urbanizable_No_Urbanizado', 'Lote Urbanizable No Urbanizado'), ('Lote_Urbanizable_No_Construido', 'Lote Urbanizable No Construido'), ('Lote_No_Urbanizable', 'Lote No Urbanizable'), ('Pecuario', 'Pecuario'), ('Recreacional', 'Recreacional'), ('Religioso', 'Religioso'), ('Salubridad', 'Salubridad'), ('Servicios_Funerarios', 'Servicios Funerarios'), ('Uso_Publico', 'Uso Público')], help_text='Tipo de destinación económica del predio', max_length=100, verbose_name='Tipo de Destinacón Económica')),
            ],
            options={
                'verbose_name': 'Tipo de Destinación Económica',
                'verbose_name_plural': 'Tipos de Destinación Económica',
            },
        ),
        migrations.CreateModel(
            name='LC_FuenteAdministrativaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Documento_Privado', 'Documento privado'), ('Escritura_Publica', 'Escritura pùblica (Documento público)'), ('Sentencia_Judicial', 'Sentencia judicial (Documento público)'), ('Acto_Administrativo', 'Acto administrativo (Documento público)'), ('Sin_Documento', 'Sin documento')], max_length=100, verbose_name='Tipos de documentos.')),
            ],
            options={
                'verbose_name': 'Tipo de fuente administrativa (LC)',
                'verbose_name_plural': 'Tipos de fuentes administrativas (LC)',
            },
        ),
        migrations.CreateModel(
            name='LC_PredioTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Publico_Baldio', 'Baldío (Público)'), ('Publico_Fiscal_Patrimonial', 'Fiscal Patrimonial (Público)'), ('Publico_Uso_Publico', 'Uso Público (Público)'), ('Publico', 'Público'), ('Privado', 'Privado')], help_text='Tipo de predio, puede ser público o privado con subcategorías para público', max_length=50, verbose_name='Tipo de Predio')),
            ],
            options={
                'verbose_name': 'Tipo de Predio',
                'verbose_name_plural': 'Tipos de Predios',
            },
        ),
        migrations.CreateModel(
            name='LC_ResultadoVisitaTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('resultado', models.CharField(choices=[('Exitoso', 'Exitoso'), ('Incompleto', 'Incompleto'), ('No_Hay_Nadie', 'No hay nadie'), ('No_Permitieron_Acceso', 'No permitieron acceso'), ('Menor_Edad', 'Menor edad'), ('Situacion_Orden_Publico', 'Situación de orden público'), ('Zona_Dificil_Acceso', 'Zona de dificil acceso'), ('Sin visita', 'Sin visita')], help_text='Resultado obtenido tras la visita predial', max_length=50, verbose_name='Resultado de visita')),
            ],
            options={
                'verbose_name': 'Resultado de visita',
                'verbose_name_plural': 'Resultados de visita',
            },
        ),
        migrations.CreateModel(
            name='SectorTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Norte', 'Norte'), ('Sur', 'Sur'), ('Este', 'Este'), ('Oeste', 'Oeste')], help_text='Sector de la ciudad o del predio', max_length=10, verbose_name='Sector')),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectores',
            },
        ),
        migrations.CreateModel(
            name='TipoDireccionTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Estructurada', 'Estructurada'), ('No Estructurada', 'No Estructurada')], help_text='Tipo de dirección', max_length=50, verbose_name='Tipo de dirección')),
            ],
            options={
                'verbose_name': 'Tipo de Dirección',
                'verbose_name_plural': 'Tipos de Direcciones',
            },
        ),
        migrations.CreateModel(
            name='TipoNovedadFMITipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('FMI_No_Encontrado', 'FMI no encontrado'), ('FMI Duplicado', 'FMI duplicado'), ('FMI_Inexistente', 'FMI Inexistente'), ('FMI_Incorrecto', 'FMI Incorrecto'), ('FMI_Desactualizado', 'FMI Desactualizado')], help_text='Indica las diferencias o inexactitudes relativas al registro de predios en el FMI', max_length=100, verbose_name='Tipo de Novedad FMI')),
            ],
            options={
                'verbose_name': 'Tipo de Novedad FMI',
                'verbose_name_plural': 'Tipos de Novedades FMI',
            },
        ),
        migrations.CreateModel(
            name='TipoNovedadTipo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(auto_now=True, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Englobe', 'Englobe de predios'), ('Desenglobe', 'Desenglobe de predio'), ('MOdificacion', 'Modificación del número predial'), ('Correccion', 'Correción de datos')], help_text='Indica los diferentes tipos de modificaciones que puede tener el número predial', max_length=100, verbose_name='Tipo de novedad')),
            ],
            options={
                'verbose_name': 'Tipo de Novedad',
                'verbose_name_plural': 'Tipos de Novedades',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCI_Forma_Presentacion_Codigo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('codigo', models.CharField(choices=[('Imagen', 'Imagen'), ('Documento', 'Docuemento'), ('Mapa', 'Mapa'), ('Video', 'Video')], max_length=50, verbose_name='Tipos de formatos de presentación de la fuente')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de formato',
                'verbose_name_plural': 'historical Tipos de formatos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClaseViaPrincipalClase',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('clase', models.CharField(choices=[('Avenida_Calle', 'Avenida Calle'), ('Avenida_Carrera', 'Avenida Carrera'), ('Avenida', 'Avenida'), ('Autopista', 'Autopista'), ('Circunvalar', 'Circunvalar'), ('Calle', 'Calle'), ('Carrera', 'Carrera'), ('Diagonal', 'Diagonal'), ('Transversal', 'Transversal'), ('Circular', 'Circular')], help_text='Clase de vía principal', max_length=50, verbose_name='Clase de Vía Principal')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Clase de Vía Principal',
                'verbose_name_plural': 'historical Clases de Vías Principales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_AreaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Area_catastral_grafica', 'Àrea catastral gráfica del predio'), ('Area_catastral_alfanumerica', 'Área catastral alfanumérica')], max_length=50, verbose_name='Tipos de área catastral')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de área',
                'verbose_name_plural': 'historical Tipos de área',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_DimensionTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Dim2D', 'Dimensión 2D'), ('Dim3D', 'Dimensión 3D'), ('Otro', 'Otra dimensiòn')], max_length=50, verbose_name='Tipos de dimensiones')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de dimensión',
                'verbose_name_plural': 'historical Tipos de dimensiones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_EstadoDisponibilidadTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Convertido', 'Convertido'), ('Desconocido', 'Desconocido'), ('Disponible', 'Disponible')], max_length=50, verbose_name='Tipos de estado de disponibilidad')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de estado de disponibilidad',
                'verbose_name_plural': 'historical Tipos de estados de disponibiidad',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_FuenteAdministrativaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Documento_publico', 'Documento Público'), ('Documento_privado', 'Documento Privado')], max_length=50, verbose_name='Tipo de documento.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de fuente administrativa (COL)',
                'verbose_name_plural': 'historical Tipos de fuentes administrativas (COL)',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_FuenteEspacialTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Croquis_Campo', 'Croquis de campo'), ('Datos_Crudos', 'Datos crudos(GPS, Estación total, LIDAR)'), ('Ortofoto', 'Ortofoto'), ('Informe_Tecnico', 'Informe técnico'), ('Registro_Fotografico', 'Registro fotográfico')], max_length=100, verbose_name='Tipos de fuente espacial')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de fuente espacial',
                'verbose_name_plural': 'historical Tipos de fuentes espaciales',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_GrupoInteresadoTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Grupo civil', 'Grupo Civil'), ('Grupo empresarial', 'Grupo Empresarial'), ('Grupo étnico', 'Grupo Etnico'), ('Grupo mixto', 'Grupo Mixto')], max_length=50, verbose_name='Tipo de grupo de interesados')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de grupo de interesado',
                'verbose_name_plural': 'historical Tipos de grupo de interesados',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_RelacionSuperficieTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('En_Rasante', 'En rasante'), ('En_Vuelo', 'En vuelo'), ('En_subsuelo', 'En subsuelo'), ('Otro', 'Otro')], max_length=50, verbose_name='Tipos de superficie')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de relación de superficie',
                'verbose_name_plural': 'historical Tipos de relación de superficie',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_UnidadAdministrativaBasicaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Predio', 'Predio'), ('Ordenamiento_Territorial', 'Ordenamiento Territorial'), ('Servicios_Publicos', 'Servicios Públicos'), ('Reservas_Naturales', 'Reservas Naturales'), ('Parques_Naturales', 'Parques Naturales'), ('Amenazas_Riesgos', 'Amenazas y Riesgos'), ('Servidumbre', 'Servidumbre'), ('Superficies_Agua', 'Superficies de Agua'), ('Transporte', 'Transporte')], help_text='Tipo de unidad administrativa básica', max_length=50, verbose_name='Tipo de Unidad Administrativa Básica')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Unidad Administrativa Básica',
                'verbose_name_plural': 'historical Tipos de Unidad Administrativa Básica',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCOL_VolumenTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Oficial', 'Oficial'), ('Calculado', 'Calculado'), ('Otro', 'Otro')], max_length=50, verbose_name='Tipos de volumen')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de volumen',
                'verbose_name_plural': 'historical Tipos de volumen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_ConstruccionPlantaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Piso', 'Piso'), ('Mezanine', 'Mezanine'), ('Sotano', 'Sótano'), ('Semisotano', 'Semisótano'), ('Subterraneo', 'Subterraneo')], max_length=50, verbose_name='Tipos de plantas.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de planta de construcción',
                'verbose_name_plural': 'historical Tipos de plantas de construcción',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_DocumentoTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Cedula_Ciudadania', 'Cédula Ciudadanía'), ('Cedula_Extranjeria', 'Cédula EXtranjería'), ('NIT', 'NIT'), ('Tarjeta_Identidad', 'Tarjeta de Identidad'), ('Registro_Civil', 'Registro Civil'), ('Secuencial', 'Secuencial'), ('Pasaporte', 'Pasaporte')], help_text='Tipo de documento de identificación de la persona', max_length=50, verbose_name='Tipo de Documento')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Documento',
                'verbose_name_plural': 'historical Tipos de Documentos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_GrupoEtnicoTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Indígena', 'Indigena'), ('Rrom', 'Rrom'), ('Raizal', 'Raizal'), ('Palenquero', 'Palenquero'), ('Negro o afrocolombiano', 'Negro Afrocolombiano'), ('Ninguno', 'Ninguno')], help_text='Grupo de persona a la cual pertenece el interesado, quienes comparten una misma ideología cultural.', max_length=50, verbose_name='Tipo de grupo étnico')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de grupo étnico',
                'verbose_name_plural': 'historical Tipos de grupos étnicos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_InteresadoTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Persona natural', 'Persona Natural'), ('Persona juridica', 'Persona Juridica')], help_text='Persona natural que actúa a nombre propio y persona jurica que actúa como institución', max_length=50, verbose_name='Tipo de interesado')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de interesado',
                'verbose_name_plural': 'historical Tipos de interesados',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_SexoTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('Sin determinar', 'Sin Determinar')], help_text='Corresponde a "Masculino" y "Femenino" según como aparezca en el tipo de documento de identidad', max_length=50, verbose_name='Tipo de sexo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de sexo',
                'verbose_name_plural': 'historical Tipos de sexo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_UnidadConstruccionTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Residencial', 'Residencial'), ('Comercial', 'Comercial'), ('Industrial', 'Industrial'), ('Institucional', 'Institucional'), ('Anexo', 'Anexo')], max_length=50, verbose_name='Tipos de unidad de construcción')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de unidad de construcción',
                'verbose_name_plural': 'historical Tipos de unidad de construcción',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCR_UsoUConsTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Apartamentos_4_y_mas_pisos_en_PH', 'Apartamentos más de 4 pisos en PH (Residencial)'), ('Apartamentos_4_y_mas_pisos', 'Apartamentos de 4 y más pisos (Residencial)'), ('Barracas', 'Barracas (Residencial)'), ('Casa_Elbas', 'Casa Elbas (Residencial)'), ('Depositos_Lockers', 'Depósitos o lockers (Residencial)'), ('Garajes_Cubiertos', 'Garajes cubiertos (Residencial)'), ('Garajes_En_PH', 'Garajes en PH (Residencial)'), ('Salon_Comunal', 'Salón comunal (Residencial)'), ('Secadero_Ropa', 'Secadero de ropa (Residencial)'), ('Vivienda_Colonial', 'Vivienda colonial (Residencial)'), ('Vivienda_Colonial_en_PH', 'Vivienda colonial en PH (Residencial)'), ('Vivienda_Hasta_3_Pisos', 'Vivienda hasta 3 pisos (Residencial)'), ('Vivienda_Hasta_3_Pisos_En_PH', 'Vivienda hasta 3 pisos en PH (Residencial)'), ('Vivienda_Recreacional', 'Vivienda recreacional (Residencial)'), ('Vivienda_Recreacional_En_PH', 'Vivienda recreacional en PH (Residencial)'), ('Bodegas_Comerciales_Grandes_Almacenes', 'Bodegas comerciales - Grandes almacenes (Comercial)'), ('Bodegas_Comerciales_en_PH', 'Bodegas Comerciales en PH (Comercial)'), ('Centros_Comerciales', 'Centros comerciales (Comercial)'), ('Centros_Comerciales_en_PH', 'Centros comerciales en PH (Comercial)'), ('Clubes_Casinos', 'Clubes - Casinos (Comercial)'), ('Comercio', 'Comercio (Comercial)'), ('Comercio_Colonial', 'Comercio colonial (Comercial)'), ('Comercio_en_PH', 'Comercio en PH (Comercial)'), ('Hotel_Colonial', 'Hotel colonial (Comercial)'), ('Hoteles', 'Hoteles (Comercial)'), ('Hoteles_en_PH', 'Hoteles en PH (Comercial)'), ('Oficinas_Consultorios', 'Oficinas - Consultorios (Comercial)'), ('Oficinas_Consultorios_Coloniales', 'Oficinas - Consultorios coloniales (Comercial)'), ('Oficinas_Consultorios_en_PH', 'Oficinas Consultorios en PH (Comercial)'), ('Parque_Diversiones', 'Parque de diversiones (Comercial)'), ('Parqueaderos', 'Parqueaderos (Comercial)'), ('Parqueaderos_en_PH', 'Parqueaderos en PH (Comercial)'), ('Pensiones_y_Residencias', 'Pensiones y residencias (Comercial)'), ('Plaza_Mercado', 'Plaza de mercado (Comercial)'), ('Restaurante_Colonial', 'Restaurante colonial (Comercial)'), ('Restaurantes', 'Restaurantes (Comercial)'), ('Restaurantes_en_PH', 'Restaurantes en PH (Comercial)'), ('Teatro_Cinemas', 'Teatro - Cinemas (Comercial)'), ('Teatro_Cinemas_en_PH', 'Teatro - Cinemas en PH (Comercial)'), ('Bodega_Casa_Bomba', 'Bodega casa bomba (Industrial)'), ('Bodegas_Casa_Bomba_en_PH', 'Bodegas casa bomba en PH (Industrial)'), ('Industrias', 'Industrias (Industrial)'), ('Industrias_en_PH', 'Industrias en PH (Industrial)'), ('Talleres', 'Talleres (Industrial)'), ('Aulas_de_Clases', 'Aulas de clases (Institucional)'), ('Biblioteca', 'Biblioteca (Institucional)'), ('Carceles', 'Cárceles (Institucional)'), ('Casas_de_Culto', 'Casas de culto (Institucional)'), ('Clinicas_Hospitales_Centros_Medicos', 'Clínicas, hospitales, centros medicos (Institucional)'), ('Colegio_y_Universidades', 'Colegio y universidades (Institucional)'), ('Coliseos', 'Coliseos (Institucional)'), ('Entidad_Educativa_Colonial_Colegio_Colonial', 'Entidad educativa colonial colegio colonial (Institucional)'), ('Estadios', 'Estadios (Institucional)'), ('Fuertes_y_Castillos', 'Fuertes y Castillos (Institucional)'), ('Iglesia', 'Iglesia (Institucional)'), ('Iglesia_en_PH', 'Iglesia en PH (Institucional)'), ('Instalaciones_Militares', 'Instalaciones militares (Institucional)'), ('Jardin_Infantil_en_Casa', 'Jardín infantil en casa (Institucional)'), ('Parque_Cementerio', 'Parque Cementerio (Institucional)'), ('Planetario', 'Planetario (Institucional)'), ('Plaza_de_Toros', 'Plaza de toros (Institucional)'), ('Puestos_de_Salud', 'Puestos de salud (Institucional)'), ('Museos', 'Museos (Institucional)'), ('Seminarios_Conventos', 'Seminarios, conventos (Institucional)'), ('Teatro', 'Teatro (Institucional)'), ('Unidad_Deportiva', 'Unidad deportiva (Institucional)'), ('Velodromo_Patinodromo', 'Velódromo, patinódromo (Institucional)'), ('Albercas_Banaderas', 'Albercas - Banaderas (Anexo)'), ('Beneficiaderos', 'Beneficiaderos (Anexo)'), ('Camaroneras', 'Camaroneras (Anexo)'), ('Canchas', 'Canchas (Anexo)'), ('Canchas_de_Tenis', 'Canchas de tenis (Anexo)'), ('Carretera', 'Carretera (Anexo)'), ('Cerramiento', 'Cerramiento (Anexo)'), ('Cimientos_Estructura_Muros_y_Placa_Base', 'Cimientos, estructura, muros y placa base (Anexo)'), ('Cocheras_Marraneras_Porquerizas', 'Cocheras - Marraneras - Porquerizas (Anexo)'), ('Construccion_en_Membrana_Arquitectonica', 'Construcción en membrana arquitectónica (Anexo)'), ('Contenedor', 'Contenedor (Anexo)'), ('Corrales', 'Corrales (Anexo)'), ('Establos_Pesebreras_Caballerizas', 'Establos - Pesebreras - Caballerizas (Anexo)'), ('Estacion_Bombeo', 'Estacion de bombeo (Anexo)'), ('Estacion_Sistema_Transporte', 'Estacion de sistema de transporte (Anexo)'), ('Galpones_Gallineros', 'Galpones - Gallineros (Anexo)'), ('Glamping', 'Glamping (Anexo)'), ('Hangar', 'Hangar (Anexo)'), ('Kioscos', 'Kioscos (Anexo)'), ('Lagunas_de_Oxidacion', 'Lagunas de oxidacion (Anexo)'), ('Marquesinas_Patios_Cubiertos', 'Marquesinas - Patios cubiertos (Anexo)'), ('Muelles', 'Muelles (Anexo)'), ('Murallas', 'Murallas (Anexo)'), ('Pergolas', 'Pérgolas (Anexo)'), ('Piscinas', 'Piscinas (Anexo)'), ('Pista_Aeropuerto', 'Pista aeropuerto (Anexo)'), ('Pozos', 'Pozos (Anexo)'), ('Ramadas_Cobertizos_Caneyes', 'Ramadas - Cobertizos - Caneyes (Anexo)'), ('Secaderos', 'Secaderos (Anexo)'), ('Silos', 'Silos (Anexo)'), ('Tanques', 'Tanques (Anexo)'), ('Toboganes', 'Toboganes (Anexo)'), ('Torre_de_Control', 'Torre de control (Anexo)'), ('Torres_de_Enfriamiento', 'Torres de enfriamiento (Anexo)'), ('Via_Ferrea', 'Vía Férrea (Anexo)')], max_length=50, verbose_name='Tipos de uso de unidad de constrocción')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de uso de unidad de construcción',
                'verbose_name_plural': 'historical Tipos de usos de unidades de construcción',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLC_CondicionPredioTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('NPH', 'NPH'), ('PH_Matriz', 'Matriz (PH)'), ('PH_Unidad_Predial', 'Unidad Predial (PH)'), ('Condominio_Matriz', 'Matriz (Condominio)'), ('Condominio_Unidad_Predial', 'Unidad Predial (Condominio)'), ('Parque_Cementerio_  Matriz', 'Matriz (Parque Cementerio)'), ('Parque_Cementerio_Unidad_Predial', 'Unidad Predial (Parque Cementerio)'), ('Via', 'Vía'), ('Informal', 'Informal'), ('Bien_Uso_Publico', 'Bien de Uso Público')], help_text='Tipo de condición de predio, con varias subcategorias', max_length=50, verbose_name='Tipo de Condición de Predio')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Condición de Predio',
                'verbose_name_plural': 'historical Condiciones de Predios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLC_DerechoTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Dominio', 'Dominio'), ('Ocupación', 'Ocupacion'), ('Posesión', 'Posesion')], help_text='Tipo de derecho relacionado con la tenencia del predio', max_length=50, verbose_name='Tipo de Derecho')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Derecho',
                'verbose_name_plural': 'historical Tipos de Derechos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLC_DestinacionEconomicaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Acuicola', 'Acuícola'), ('Agricola', 'Agrícola'), ('Agroindustrial', 'Agroindustrial'), ('Agropecuario', 'Agropecuario'), ('Agroforestal', 'Agroforestal'), ('Comercial', 'Comercial'), ('Cultural', 'Cultural'), ('Educativo', 'Educativo'), ('Forestal', 'Forestal'), ('Habitacional', 'Habitacional'), ('Industrial', 'Industrial'), ('Infraestructura_Asociada_Produccion_Agropecuaria', 'Infraestructura Asociada a Producción Agropecuaria'), ('Infraestructura_Hidraulica', 'Infraestructura Hidráulica'), ('Infraestructura_Saneamiento_Basico', 'Infraestructura de Saneamiento Básico'), ('Infraestructura_Seguridad', 'Infraestructura de Seguridad'), ('Infraestructura_Transporte', 'Infraestructura de Transporte'), ('Institucional', 'Institucional'), ('Mineria_Hidrocarburos', 'Minería e Hidrocarburos'), ('Lote_Urbanizable_No_Urbanizado', 'Lote Urbanizable No Urbanizado'), ('Lote_Urbanizable_No_Construido', 'Lote Urbanizable No Construido'), ('Lote_No_Urbanizable', 'Lote No Urbanizable'), ('Pecuario', 'Pecuario'), ('Recreacional', 'Recreacional'), ('Religioso', 'Religioso'), ('Salubridad', 'Salubridad'), ('Servicios_Funerarios', 'Servicios Funerarios'), ('Uso_Publico', 'Uso Público')], help_text='Tipo de destinación económica del predio', max_length=100, verbose_name='Tipo de Destinacón Económica')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Destinación Económica',
                'verbose_name_plural': 'historical Tipos de Destinación Económica',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLC_FuenteAdministrativaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Documento_Privado', 'Documento privado'), ('Escritura_Publica', 'Escritura pùblica (Documento público)'), ('Sentencia_Judicial', 'Sentencia judicial (Documento público)'), ('Acto_Administrativo', 'Acto administrativo (Documento público)'), ('Sin_Documento', 'Sin documento')], max_length=100, verbose_name='Tipos de documentos.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de fuente administrativa (LC)',
                'verbose_name_plural': 'historical Tipos de fuentes administrativas (LC)',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLC_PredioTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Publico_Baldio', 'Baldío (Público)'), ('Publico_Fiscal_Patrimonial', 'Fiscal Patrimonial (Público)'), ('Publico_Uso_Publico', 'Uso Público (Público)'), ('Publico', 'Público'), ('Privado', 'Privado')], help_text='Tipo de predio, puede ser público o privado con subcategorías para público', max_length=50, verbose_name='Tipo de Predio')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Predio',
                'verbose_name_plural': 'historical Tipos de Predios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLC_ResultadoVisitaTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('resultado', models.CharField(choices=[('Exitoso', 'Exitoso'), ('Incompleto', 'Incompleto'), ('No_Hay_Nadie', 'No hay nadie'), ('No_Permitieron_Acceso', 'No permitieron acceso'), ('Menor_Edad', 'Menor edad'), ('Situacion_Orden_Publico', 'Situación de orden público'), ('Zona_Dificil_Acceso', 'Zona de dificil acceso'), ('Sin visita', 'Sin visita')], help_text='Resultado obtenido tras la visita predial', max_length=50, verbose_name='Resultado de visita')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Resultado de visita',
                'verbose_name_plural': 'historical Resultados de visita',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSectorTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Norte', 'Norte'), ('Sur', 'Sur'), ('Este', 'Este'), ('Oeste', 'Oeste')], help_text='Sector de la ciudad o del predio', max_length=10, verbose_name='Sector')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Sector',
                'verbose_name_plural': 'historical Sectores',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoDireccionTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Estructurada', 'Estructurada'), ('No Estructurada', 'No Estructurada')], help_text='Tipo de dirección', max_length=50, verbose_name='Tipo de dirección')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Dirección',
                'verbose_name_plural': 'historical Tipos de Direcciones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoNovedadFMITipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('FMI_No_Encontrado', 'FMI no encontrado'), ('FMI Duplicado', 'FMI duplicado'), ('FMI_Inexistente', 'FMI Inexistente'), ('FMI_Incorrecto', 'FMI Incorrecto'), ('FMI_Desactualizado', 'FMI Desactualizado')], help_text='Indica las diferencias o inexactitudes relativas al registro de predios en el FMI', max_length=100, verbose_name='Tipo de Novedad FMI')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Novedad FMI',
                'verbose_name_plural': 'historical Tipos de Novedades FMI',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoNovedadTipo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('state', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('modified_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Modificación')),
                ('deleted_date', models.DateField(blank=True, editable=False, verbose_name='Fecha de Elimnación')),
                ('tipo', models.CharField(choices=[('Englobe', 'Englobe de predios'), ('Desenglobe', 'Desenglobe de predio'), ('MOdificacion', 'Modificación del número predial'), ('Correccion', 'Correción de datos')], help_text='Indica los diferentes tipos de modificaciones que puede tener el número predial', max_length=100, verbose_name='Tipo de novedad')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tipo de Novedad',
                'verbose_name_plural': 'historical Tipos de Novedades',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
